<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
		default-lazy-init="true">

    <description>Spring容器配置</description>

	<import resource="classpath:/datasource.xml"/>
	
    <!--  定义jdbc配置信息路径   -->
    <!--<context:property-placeholder location="classpath*:/jdbc.properties" />-->

    <!-- 定义受环境影响易变的变量 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <!-- <property name="autoLoadClasspath" value="true"></property> -->
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations">
            <list>
                <!-- 标准配置 -->
                <value>classpath:/application.properties</value>
                <value>classpath:/jdbc.properties</value>
                <value>classpath:/log4j.properties</value>
            </list>
        </property>
    </bean>

    <context:annotation-config />

    <!-- 扫描annotation类, 自动注册bean, 过滤Service，Repository -->
    <context:component-scan base-package="com.cloudwave.cycletrail" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>


    <!-- 以静态变量保存ApplicationContext -->
    <!--<bean class="org.springside.modules.utils.spring.SpringContextHolder" lazy-init="false" />-->

    <!--  数据源配置,使用c3p0数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="minPoolSize" value="1" />
		<property name="maxPoolSize" value="5" />
		<property name="maxIdleTime" value="10" />
    </bean>

	<!-- <jdbc:initialize-database data-source="dataSource" ignore-failures="ALL" enabled="#{app.init_database}"> -->
	<!-- 
	<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL" enabled="true">
		<jdbc:script location="classpath:sql/init-mysql.sql" encoding="UTF-8"/>
		<jdbc:script location="classpath:sql/init-oracle.sql" encoding="UTF-8"/>
	</jdbc:initialize-database>
	 -->

    <!-- Mybatis配置 -->
    <!-- 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.cloudwave.cycletrail.text.mapper.CtTextMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	 -->
 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.cloudwave.fwapp.module;com.cloudwave.cycletrail.domain" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:/mapper/*Mapper.xml" />
	</bean>
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cloudwave.cycletrail.mapper" />
	</bean>


    <!--  jdbcTemplate数据库操作类 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--  定义事务管理 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

	<!-- 另一个事务管理器, Jdbc单数据源事务 -->
	<bean id="quartzTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="quartzDataSource" />
	</bean>
	
    <!--使用annotation定义事务, 支持dao事务注解-->
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />
	
	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
    <!-- Remove this if your database setting is fine.
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
     -->

    <!-- Transaction manager for a single JDBC DataSource
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
     -->

    <!--
    <bean id="attributeManager" class="com.ideawu.core.AttributeManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
     -->
</beans>