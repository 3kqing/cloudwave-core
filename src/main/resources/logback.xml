<?xml version="1.0" encoding="UTF-8"?>
	
<!-- 配置参考:http://logback.qos.ch/manual/configuration.html -->
<!-- scan="false":是否监听文件改动;scanPeriod="30 seconds":扫描时间间隔;debug="true"是否为调试模式 -->
<configuration scan="false" debug="true">
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
	<property name="LOG_HOME" value="C:\\logs" />
	<property name="APP_NAME" value="trailends" />

	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- <layout class="ch.qos.logback.classic.PatternLayout"> <Pattern>%d{HH:mm:ss.SSS} 
			[%thread] %-5level %logger{36} - %msg%n</Pattern> </layout> -->
		<!-- <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> -->
		<encoder charset="UTF-8">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
				%msg%n</pattern>
		</encoder>
	</appender>
	<!-- 
		按照每天生成日志文件:
			在同一天的日志文件按照大小进行分割
			超出大小之后按照序号进行分割
	 -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/${APP_NAME}/log.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/${APP_NAME}/log-%d{yyyy-MM-dd}-%i.log</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy  class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>5MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			
			<!--日志文件保留天数 -->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<!-- encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> -->
		<encoder charset="UTF-8">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
				%msg%n</pattern>
		</encoder>
	</appender>

	<!-- 单纯安装文件大小进行分割, 如果超出最大索引值则删除时间最早的日志，然后按照同样规则重命名 -->
	<!-- 
	<appender name="LOG_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/${APP_NAME}/log.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<FileNamePattern>${LOG_HOME}/${APP_NAME}/log-%i.log</FileNamePattern>
			<MinIndex>1</MinIndex>
			<MaxIndex>4</MaxIndex>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level %-28.28thread
				%-64.64logger{64} %X{medic.eventCode} %msg %ex%n</Pattern>
		</encoder>
	</appender>
	 -->

	<!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
	<!-- <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE" 
		/> <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG" 
		/> <logger name="org.hibernate.SQL" level="DEBUG" /> <logger name="org.hibernate.engine.QueryParameters" 
		level="DEBUG" /> <logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG" 
		/> -->

	<!--myibatis log configure -->
	<logger name="java.sql.ResultSet" level="DEBUG" />
	<logger name="java.sql.Connection" level="DEBUG" />
	<logger name="java.sql.Statement" level="DEBUG" />
	<logger name="java.sql.PreparedStatement" level="DEBUG" />

	<logger name="com.apache.ibatis" level="DEBUG" />
	<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />
	<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate"
		level="DEBUG" />
	
	<!--日志异步到数据库 -->
	<appender name="DB" class="ch.qos.logback.classic.db.DBAppender">
		<!--日志异步到数据库 -->
		<!-- 
		<connectionSource
			class="ch.qos.logback.core.db.DriverManagerConnectionSource">
		 -->
		<connectionSource
      		class="ch.qos.logback.core.db.DataSourceConnectionSource">
			<!--连接池 -->
			<dataSource class="com.mchange.v2.c3p0.ComboPooledDataSource">
				<driverClass>com.mysql.jdbc.Driver</driverClass>
				<jdbcUrl>jdbc:mysql://192.168.1.11:3368/trailends</jdbcUrl>
				<user>wwl</user>
				<password>111</password>
			</dataSource>
		</connectionSource>
	</appender>
	
	<!-- 日志输出级别 -->
	<root level="debug">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
		<appender-ref ref="DB" />
	</root>
</configuration>